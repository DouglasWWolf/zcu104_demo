// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="controller_controller,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.338667,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2559,HLS_SYN_LUT=6450,HLS_VERSION=2021_2}" *)

module controller (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        axi_cmd_fifo_din,
        axi_cmd_fifo_full_n,
        axi_cmd_fifo_write,
        axi_rsp_fifo_dout,
        axi_rsp_fifo_empty_n,
        axi_rsp_fifo_read,
        uart_xmit_fifo_din,
        uart_xmit_fifo_full_n,
        uart_xmit_fifo_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [64:0] axi_cmd_fifo_din;
input   axi_cmd_fifo_full_n;
output   axi_cmd_fifo_write;
input  [33:0] axi_rsp_fifo_dout;
input   axi_rsp_fifo_empty_n;
output   axi_rsp_fifo_read;
output  [7:0] uart_xmit_fifo_din;
input   uart_xmit_fifo_full_n;
output   uart_xmit_fifo_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg axi_cmd_fifo_write;
reg axi_rsp_fifo_read;
reg[7:0] uart_xmit_fifo_din;
reg uart_xmit_fifo_write;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    axi_cmd_fifo_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln49_fu_150_p2;
wire   [0:0] icmp_ln52_fu_162_p2;
reg    axi_rsp_fifo_blk_n;
reg   [31:0] switches_load_reg_262;
wire   [15:0] trunc_ln49_fu_186_p1;
reg   [15:0] trunc_ln49_reg_267;
wire   [4:0] add_fu_208_p2;
reg   [4:0] add_reg_275;
wire    ap_CS_fsm_state4;
wire   [0:0] switch_state_fu_226_p2;
reg   [0:0] switch_state_reg_281;
wire   [0:0] icmp_ln20_fu_202_p2;
wire    grp_print_fu_100_ap_start;
wire    grp_print_fu_100_ap_done;
wire    grp_print_fu_100_ap_idle;
wire    grp_print_fu_100_ap_ready;
wire   [7:0] grp_print_fu_100_uart_xmit_fifo_din;
wire    grp_print_fu_100_uart_xmit_fifo_write;
wire    grp_print_1_fu_113_ap_start;
wire    grp_print_1_fu_113_ap_done;
wire    grp_print_1_fu_113_ap_idle;
wire    grp_print_1_fu_113_ap_ready;
wire   [7:0] grp_print_1_fu_113_uart_xmit_fifo_din;
wire    grp_print_1_fu_113_uart_xmit_fifo_write;
wire    grp_print_3_fu_126_ap_start;
wire    grp_print_3_fu_126_ap_done;
wire    grp_print_3_fu_126_ap_idle;
wire    grp_print_3_fu_126_ap_ready;
wire   [7:0] grp_print_3_fu_126_uart_xmit_fifo_din;
wire    grp_print_3_fu_126_uart_xmit_fifo_write;
wire    grp_print_2_fu_134_ap_start;
wire    grp_print_2_fu_134_ap_done;
wire    grp_print_2_fu_134_ap_idle;
wire    grp_print_2_fu_134_ap_ready;
wire   [7:0] grp_print_2_fu_134_uart_xmit_fifo_din;
wire    grp_print_2_fu_134_uart_xmit_fifo_write;
reg    grp_print_fu_100_ap_start_reg;
reg    ap_predicate_op25_write_state2;
reg    ap_predicate_op27_read_state2;
reg    ap_block_state2_ignore_call3;
wire    ap_CS_fsm_state3;
reg    grp_print_1_fu_113_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_print_3_fu_126_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_print_2_fu_134_ap_start_reg;
wire    ap_CS_fsm_state8;
reg   [1:0] i_fu_74;
wire   [1:0] i_16_fu_156_p2;
reg    ap_block_state2;
reg   [31:0] switches_fu_78;
wire   [31:0] switches_1_fu_168_p1;
reg   [4:0] i_1_fu_82;
reg    ap_block_state7_on_subcall_done;
wire   [15:0] zext_ln20_fu_198_p1;
wire   [15:0] shl_fu_215_p2;
wire   [15:0] and_fu_221_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_print_fu_100_ap_start_reg = 1'b0;
#0 grp_print_1_fu_113_ap_start_reg = 1'b0;
#0 grp_print_3_fu_126_ap_start_reg = 1'b0;
#0 grp_print_2_fu_134_ap_start_reg = 1'b0;
end

controller_print grp_print_fu_100(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_print_fu_100_ap_start),
    .ap_done(grp_print_fu_100_ap_done),
    .ap_idle(grp_print_fu_100_ap_idle),
    .ap_ready(grp_print_fu_100_ap_ready),
    .v0(switches_load_reg_262),
    .uart_xmit_fifo_din(grp_print_fu_100_uart_xmit_fifo_din),
    .uart_xmit_fifo_full_n(uart_xmit_fifo_full_n),
    .uart_xmit_fifo_write(grp_print_fu_100_uart_xmit_fifo_write)
);

controller_print_1 grp_print_1_fu_113(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_print_1_fu_113_ap_start),
    .ap_done(grp_print_1_fu_113_ap_done),
    .ap_idle(grp_print_1_fu_113_ap_idle),
    .ap_ready(grp_print_1_fu_113_ap_ready),
    .v0(add_reg_275),
    .uart_xmit_fifo_din(grp_print_1_fu_113_uart_xmit_fifo_din),
    .uart_xmit_fifo_full_n(uart_xmit_fifo_full_n),
    .uart_xmit_fifo_write(grp_print_1_fu_113_uart_xmit_fifo_write)
);

controller_print_3 grp_print_3_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_print_3_fu_126_ap_start),
    .ap_done(grp_print_3_fu_126_ap_done),
    .ap_idle(grp_print_3_fu_126_ap_idle),
    .ap_ready(grp_print_3_fu_126_ap_ready),
    .uart_xmit_fifo_din(grp_print_3_fu_126_uart_xmit_fifo_din),
    .uart_xmit_fifo_full_n(uart_xmit_fifo_full_n),
    .uart_xmit_fifo_write(grp_print_3_fu_126_uart_xmit_fifo_write)
);

controller_print_2 grp_print_2_fu_134(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_print_2_fu_134_ap_start),
    .ap_done(grp_print_2_fu_134_ap_done),
    .ap_idle(grp_print_2_fu_134_ap_idle),
    .ap_ready(grp_print_2_fu_134_ap_ready),
    .uart_xmit_fifo_din(grp_print_2_fu_134_uart_xmit_fifo_din),
    .uart_xmit_fifo_full_n(uart_xmit_fifo_full_n),
    .uart_xmit_fifo_write(grp_print_2_fu_134_uart_xmit_fifo_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_print_1_fu_113_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln20_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_print_1_fu_113_ap_start_reg <= 1'b1;
        end else if ((grp_print_1_fu_113_ap_ready == 1'b1)) begin
            grp_print_1_fu_113_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_print_2_fu_134_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_print_2_fu_134_ap_start_reg <= 1'b1;
        end else if ((grp_print_2_fu_134_ap_ready == 1'b1)) begin
            grp_print_2_fu_134_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_print_3_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_print_3_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_print_3_fu_126_ap_ready == 1'b1)) begin
            grp_print_3_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_print_fu_100_ap_start_reg <= 1'b0;
    end else begin
        if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd1))) begin
            grp_print_fu_100_ap_start_reg <= 1'b1;
        end else if ((grp_print_fu_100_ap_ready == 1'b1)) begin
            grp_print_fu_100_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd1))) begin
        i_1_fu_82 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
        i_1_fu_82 <= add_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_74 <= 2'd0;
    end else if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd0))) begin
        i_fu_74 <= i_16_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_reg_275 <= add_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        switch_state_reg_281 <= switch_state_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (icmp_ln52_fu_162_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd0))) begin
        switches_fu_78 <= switches_1_fu_168_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd1))) begin
        switches_load_reg_262 <= switches_fu_78;
        trunc_ln49_reg_267 <= trunc_ln49_fu_186_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1)))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_print_fu_100_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_print_1_fu_113_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state7_on_subcall_done)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln20_fu_202_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_202_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_162_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd0))) begin
        axi_cmd_fifo_blk_n = axi_cmd_fifo_full_n;
    end else begin
        axi_cmd_fifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (ap_predicate_op25_write_state2 == 1'b1))) begin
        axi_cmd_fifo_write = 1'b1;
    end else begin
        axi_cmd_fifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_162_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd0))) begin
        axi_rsp_fifo_blk_n = axi_rsp_fifo_empty_n;
    end else begin
        axi_rsp_fifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (ap_predicate_op27_read_state2 == 1'b1))) begin
        axi_rsp_fifo_read = 1'b1;
    end else begin
        axi_rsp_fifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((switch_state_reg_281 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        uart_xmit_fifo_din = grp_print_2_fu_134_uart_xmit_fifo_din;
    end else if (((switch_state_reg_281 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        uart_xmit_fifo_din = grp_print_3_fu_126_uart_xmit_fifo_din;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        uart_xmit_fifo_din = grp_print_1_fu_113_uart_xmit_fifo_din;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        uart_xmit_fifo_din = grp_print_fu_100_uart_xmit_fifo_din;
    end else begin
        uart_xmit_fifo_din = grp_print_2_fu_134_uart_xmit_fifo_din;
    end
end

always @ (*) begin
    if (((switch_state_reg_281 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        uart_xmit_fifo_write = grp_print_2_fu_134_uart_xmit_fifo_write;
    end else if (((switch_state_reg_281 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        uart_xmit_fifo_write = grp_print_3_fu_126_uart_xmit_fifo_write;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        uart_xmit_fifo_write = grp_print_1_fu_113_uart_xmit_fifo_write;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        uart_xmit_fifo_write = grp_print_fu_100_uart_xmit_fifo_write;
    end else begin
        uart_xmit_fifo_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln49_fu_150_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_print_fu_100_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln20_fu_202_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_print_1_fu_113_ap_done == 1'b1) & (switch_state_reg_281 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((grp_print_1_fu_113_ap_done == 1'b1) & (switch_state_reg_281 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_fu_208_p2 = (i_1_fu_82 + 5'd1);

assign and_fu_221_p2 = (trunc_ln49_reg_267 & shl_fu_215_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state2 = (((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_ignore_call3 = (((axi_rsp_fifo_empty_n == 1'b0) & (ap_predicate_op27_read_state2 == 1'b1)) | ((axi_cmd_fifo_full_n == 1'b0) & (ap_predicate_op25_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state7_on_subcall_done = (((switch_state_reg_281 == 1'd1) & (grp_print_2_fu_134_ap_done == 1'b0)) | ((switch_state_reg_281 == 1'd0) & (grp_print_3_fu_126_ap_done == 1'b0)));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_predicate_op25_write_state2 = ((icmp_ln52_fu_162_p2 == 1'd0) & (icmp_ln49_fu_150_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op27_read_state2 = ((icmp_ln52_fu_162_p2 == 1'd1) & (icmp_ln49_fu_150_p2 == 1'd0));
end

assign axi_cmd_fifo_din = 65'd1081081856;

assign grp_print_1_fu_113_ap_start = grp_print_1_fu_113_ap_start_reg;

assign grp_print_2_fu_134_ap_start = grp_print_2_fu_134_ap_start_reg;

assign grp_print_3_fu_126_ap_start = grp_print_3_fu_126_ap_start_reg;

assign grp_print_fu_100_ap_start = grp_print_fu_100_ap_start_reg;

assign i_16_fu_156_p2 = (i_fu_74 + 2'd1);

assign icmp_ln20_fu_202_p2 = ((i_1_fu_82 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_150_p2 = ((i_fu_74 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_162_p2 = ((i_fu_74 == 2'd1) ? 1'b1 : 1'b0);

assign shl_fu_215_p2 = 16'd1 << zext_ln20_fu_198_p1;

assign switch_state_fu_226_p2 = ((and_fu_221_p2 == 16'd0) ? 1'b1 : 1'b0);

assign switches_1_fu_168_p1 = axi_rsp_fifo_dout[31:0];

assign trunc_ln49_fu_186_p1 = switches_fu_78[15:0];

assign zext_ln20_fu_198_p1 = i_1_fu_82;

endmodule //controller
